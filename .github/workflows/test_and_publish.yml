name: Test API 

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install testing dependencies
      run: |
        pip install pillow requests
    - name: Run docker container
      run: |
        docker-compose up -d
    - name: Run test
      run: |
        python -m unittest test
  
  deploy_python_lib:  
    needs: test
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install git chromium-driver
        curl -sL https://deb.nodesource.com/setup_12.x | sudo bash - 
        sudo apt-get install nodejs 
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        cd sbgnrender; npm install; npm run build-bundle-js; cd ..
        python setup.py sdist bdist_wheel
        twine upload dist/*

  deploy_docker_image:
    needs: test
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: |
            vnoel/sbgn-rendering-api:latest 
            vnoel/sbgn-rendering-api:${{ github.event.release.tag_name }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  